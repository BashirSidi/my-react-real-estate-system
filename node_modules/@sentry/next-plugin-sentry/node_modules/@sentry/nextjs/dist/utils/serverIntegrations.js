Object.defineProperty(exports, "__esModule", { value: true });
var integrations_1 = require("@sentry/integrations");
var SOURCEMAP_FILENAME_REGEX = /^.*\/\.next\//;
/** Default RewriteFrames integration to match filenames in Sentry. */
exports.defaultRewriteFrames = new integrations_1.RewriteFrames({
    iteratee: function (frame) {
        var _a;
        frame.filename = (_a = frame.filename) === null || _a === void 0 ? void 0 : _a.replace(SOURCEMAP_FILENAME_REGEX, 'app:///_next/');
        return frame;
    },
});
/**
 * Retrieves the patched integrations for the server.
 *
 * There must be a RewriteFrames integration.
 * If the user has defined one, there's nothing to patch.
 * If not, the default RewriteFrames integration is used.
 *
 * @param userIntegrations Integrations defined by the user.
 * @returns Final integrations, patched if necessary.
 */
function getFinalServerIntegrations(userIntegrations) {
    if (Array.isArray(userIntegrations)) {
        return getFinalIntegrationArray(userIntegrations);
    }
    return getFinalIntegrationFunction(userIntegrations);
}
exports.getFinalServerIntegrations = getFinalServerIntegrations;
/** Returns the patched integrations array. */
function getFinalIntegrationArray(userIntegrations) {
    if (userIntegrations.map(function (integration) { return integration.name; }).includes(exports.defaultRewriteFrames.name)) {
        return userIntegrations;
    }
    userIntegrations.push(exports.defaultRewriteFrames);
    return userIntegrations;
}
/** Returns a function, patching the user's integrations function. */
function getFinalIntegrationFunction(userIntegrationsFunc) {
    var integrationWrapper = function (defaultIntegrations) {
        var userIntegrations = userIntegrationsFunc(defaultIntegrations);
        return getFinalIntegrationArray(userIntegrations);
    };
    return integrationWrapper;
}
//# sourceMappingURL=serverIntegrations.js.map